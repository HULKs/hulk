#!/bin/bash

# exit on error
set -e

# cd to repository base directory for better referencing
BASEDIR=`cd $(dirname $0); pwd -P`
BASEDIR=${BASEDIR%/*}
cd "$BASEDIR"

# print help
print_help() {
    cat <<-__helpText__
Usage: $0 [OPTIONS] <Command>

Send local changes to a remote repository and execute a command there.
Optionally, files can be rsync'ed back after.

command: Command to execute on the remote machine
         Example: \`$0 ./pepsi build\`

Options:

  --remote <remote>     The git remote to use. Defaults to \`compiler\`
  --return-file <file>  Path of file to be returned.
                        The file path must be relative to the repository.
                        Can be repeated to return multiple files.

This script expects a git remote with an url similar to this:

    \`user@host:path/to/hulks/repo\`

It is recommended to use a dedicated remote worktree for this since
it will be cleaned and synchronized with the local changes without
regard for possible unsaved changes on the remote.
__helpText__
}

remote="${COMPILER_REMOTE:-compiler}"
files=()
while true; do
    case "$1" in
        -[h?] | --help)
            print_help
            exit
            ;;
        --remote)
            shift
            remote=$1
            ;;
        --return-file)
            shift
            files+=($1)
            ;;

        *)
            break
            ;;
    esac
    shift
done
echo Using remote $(tput setaf 6)$remote$(tput sgr 0)

# extract login information and remote path from git remote
# assumes remote url of this format: `user@domain:path/to/hulk/repo`
remoteURL="$(git remote get-url $remote)"
address="$(echo $remoteURL | cut -d':' -f 1)"
remotePath="$(echo $remoteURL | cut -d':' -f 2-)"

# push HEAD to compiler remote
branch=remoteCompile
git push $remote HEAD:$branch --force --no-verify
# check out pushed branch on the remote
ssh $address "sh -c \" \
    cd "$remotePath" \
    && git checkout --force \\\$(git rev-parse $branch) \
    && git clean -d --force \
\""
# send all changes that aren't uncommitted yet
git status -s | cut -c 4- | rsync -a --info=progress --delete-missing-args --files-from=- . "$remoteURL"

# invoke compile script remotely
ssh $address "sh -c \" \
    . '$HOME/.profile' \
    && cd \"$remotePath\" \
    && $@
\""

# fetch results
echo Returning files
printf '  %s\n' "${files[@]}"
printf '%s\n' "${files[@]}" | rsync -a --info=progress --files-from=- "$remoteURL" .

