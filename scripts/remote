#!/bin/bash

# Get base directory for better referencing
BASEDIR=`cd $(dirname $0); pwd -P`
BASEDIR=${BASEDIR%/*}

# print help
case $1 in
    -[h?] | --help)
        cat <<-__helpText__
Usage: $0 [--help] [remote] [command]

Pushes local changes a remote repository and executes a command there.
Afterwards, build artifacts are rsync'ed back.

remote:  The git remote to use
command: Command to execute on the remote machine
         Example: \`$0 ./pepsi build\`

This script assumes at least one git remote to exist with an url similar to this:

    \`ssh://user@domain/path/to/hulks/repo.git\`
__helpText__
        exit
esac

# if the first parameter is the name of a valid remote, use it as the compiler
remote=compiler
if git remote get-url $1 &> /dev/null;
then
    remote=$1
    shift
fi
echo Using remote $(tput setaf 6)$remote$(tput sgr 0)

# extract login information and remote path from git remote
# assumes remote url of this format: `ssh://user@domain/path/to/hulks/repo.git`
remoteURL=$(git remote get-url $remote)
address=$(echo $remoteURL | cut -d'/' -f 3)
remoteGitPath=/$(echo $remoteURL | cut -d'/' -f 4-)
remotePath=$(echo $remoteGitPath | sed 's/\.git/\//')

# push HEAD to compiler remote
git push $remote HEAD:main --force --no-verify
# send all changes that aren't uncommitted yet
git status -s | cut -c 4- | rsync -a --delete-missing-args --files-from=- "$BASEDIR" $address:$remotePath

# invoke compile script remotely
ssh $address "source ~/.profile; cd $remotePath && $@"

# fetch compilation results
rsync -a --info=progress $address:$remotePath'target' . --include="*/" --include="nao" --include="webots" --exclude="*"

