[workspace]
resolver = "2"
members = [
  "crates/aliveness",
  "crates/approx_derive",
  "crates/audio",
  "crates/calibration",
  "crates/code_generation",
  "crates/communication",
  "crates/constants",
  "crates/context_attribute",
  "crates/control",
  "crates/coordinate_systems",
  "crates/filtering",
  "crates/framework",
  "crates/geometry",
  "crates/hardware",
  "crates/hulk",
  "crates/hulk_nao",
  "crates/hulk_webots",
  "crates/kinematics",
  "crates/motionfile",
  "crates/nao",
  "crates/nao_camera",
  "crates/parameters",
  "crates/projection",
  "crates/repository",
  "crates/serialize_hierarchy",
  "crates/serialize_hierarchy_derive",
  "crates/source_analyzer",
  "crates/spl_network",
  "crates/spl_network_messages",
  "crates/types",
  "crates/vision",
  "tools/annotato",
  "tools/behavior_simulator",
  "tools/camera_matrix_extractor",
  "tools/depp",
  "tools/fanta",
  "tools/hula/types",
  "tools/localizer",
  "tools/pepsi",
  "tools/twix",
]
# HuLA and Aliveness are built independently by yocto
exclude = ["tools/aliveness", "tools/breeze", "tools/hula"]

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "GPL-3.0-only"
homepage = "https://github.com/hulks/hulk"

[workspace.dependencies]
aliveness = { path = "crates/aliveness" }
alsa = "0.7.0"
approx = "0.5.1"
approx_derive = { path = "crates/approx_derive" }
audio = { path = "crates/audio" }
awaitgroup = "0.6.0"
base64 = "0.21.0"
bat = { version = "0.23.0", default-features = false, features = [
  "regex-onig",
  "paging",
] }
bincode = "1.3.3"
bindgen = "0.65.1"
build_script_helpers = { path = "crates/build_script_helpers" }
byteorder = "1.4.3"
chrono = "0.4.23"
calibration = { path = "crates/calibration" }
clap = { version = "4.2.4", features = ["derive"] }
clap_complete = "4.2.1"
code_generation = { path = "crates/code_generation" }
color-eyre = "0.6.2"
communication = { path = "crates/communication" }
compiled-nn = "0.12.0"
constants = { path = "crates/constants" }
context_attribute = { path = "crates/context_attribute" }
control = { path = "crates/control" }
convert_case = "0.6.0"
coordinate_systems = { path = "crates/coordinate_systems" }
ctrlc = { version = "3.2.3", features = ["termination"] }
eframe = { version = "0.24.1", features = ["persistence"] }
egui_dock = { version = "0.9.1", features = ["serde"] }
egui_extras = { version = "0.24.2", features = ["image"] }
egui_plot = "0.24.1"
enum_dispatch = "0.3.11"
enum-iterator = "1.4.1"
fast_image_resize = "2.6.0"
fern = { version = "0.6.1", features = ["colored"] }
filtering = { path = "crates/filtering" }
framework = { path = "crates/framework" }
futures-util = "0.3.24"
fuzzy-matcher = "0.3.7"
geometry = { path = "crates/geometry" }
gilrs = "0.10.1"
glob = "0.3.0"
hardware = { path = "crates/hardware" }
home = "0.5.4"
hula-types = { path = "tools/hula/types" }
hulk = { path = "crates/hulk" }
i2cdev = "0.5.1"
image = "0.24.4"
indicatif = "0.17.2"
itertools = "0.10.5"
ittapi = "0.3.3"
kinematics = { path = "crates/kinematics" }
once_cell = "1.19.0"
levenberg-marquardt = "0.13.0"
libc = "0.2.137"
log = "0.4.17"
mlua = { version = "0.8.7", features = ["luajit", "serialize", "parking_lot"] }
motionfile = { path = "crates/motionfile" }
nalgebra = { version = "0.32.2", features = ["serde", "serde-serialize"] }
nao = { path = "crates/nao" }
nao_camera = { path = "crates/nao_camera" }
# Pinned git version since the latest release does not contained https://github.com/nix-rust/nix/pull/2022 yet
nix = { git = "https://github.com/nix-rust/nix.git", version = "0.26.1", rev = "89b4976" }
num-derive = "0.3"
num-traits = "0.2"
ordered-float = "3.1.0"
opusfile-ng = "0.1.0"
parameters = { path = "crates/parameters" }
parking_lot = "0.12.1"
petgraph = "0.6.2"
png = "0.17.6"
proc-macro-error = "1.0.4"
proc-macro2 = { version = "1.0.44", features = ["span-locations"] }
projection = { path = "crates/projection" }
quote = "1.0.21"
rand = "0.8.5"
rand_distr = "0.4.3"
regex = "1.6.0"
repository = { path = "crates/repository" }
rustfft = "6.0.1"
semver = "1.0.20"
serde = { version = "1.0.145", features = ["derive", "rc"] }
serde-transcode = "1.1.1"
serde_bytes = "0.11.8"
serde_json = "1.0.91"
serde_test = "1.0.152"
serialize_hierarchy = { path = "crates/serialize_hierarchy" }
serialize_hierarchy_derive = { path = "crates/serialize_hierarchy_derive" }
smallvec = "1.9.0"
source_analyzer = { path = "crates/source_analyzer" }
spl_network = { path = "crates/spl_network" }
spl_network_messages = { path = "crates/spl_network_messages" }
splines = { version = "4.2.0", features = ["serde"] }
structopt = "0.3.26"
syn = { version = "1.0.101", features = ["full", "extra-traits"] }
tempfile = "3.3.0"
thiserror = "1.0.37"
threadbound = "0.1.6"
tokio = { version = "1.21.2", features = ["full"] }
tokio-tungstenite = "0.19.0"
tokio-util = "0.7.4"
toml = "0.8.8"
topological-sort = "0.2.2"
types = { path = "crates/types" }
uuid = { version = "1.1.2", features = ["v4"] }
v4l = { version = "0.12.1", git = "https://github.com/HULKs/libv4l-rs", rev = "be65819073514b193d082dd37dbcc2cfac3f6183" }
vision = { path = "crates/vision" }
walkdir = "2.3.2"
webots = { version = "0.8.0" }
zbus = { version = "3.7.0" }

[profile.incremental]
inherits = "release"
incremental = true

[profile.release-with-debug]
inherits = "release"
debug = true
