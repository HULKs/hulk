name: Rust
on:
  pull_request:
  merge_group:
    types: [checks_requested]
env:
  CARGO_HOME: /__w/hulk/cargo
  CARGO_TARGET_DIR: /__w/hulk/target
  CARGO_TERM_COLOR: always
  HULK_DATA_HOME: /__w/hulk/data
  NAOSDK_AUTOMATIC_YES: 1

jobs:
  check:
    name: Check with clippy
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check
        run: ./pepsi clippy --locked

  check-parameters:
    name: Check parameters
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check
        run: ./pepsi run --locked parameter_tester

  format:
    name: Format
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check
        run: cargo fmt --check

  format-toml:
    name: Format TOML files
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check
        run: |
          taplo fmt --check --diff

  test:
    name: Test
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Test
        run: ./pepsi test --locked --all-features

  build:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        target:
          - imagine
          - nao
          - replayer
          - webots
        profile:
          - dev
          - release
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Build
        run: ./pepsi build --locked --profile ${{ matrix.profile }} ${{ matrix.target }}

  build_services:
    name: Build
    strategy:
      matrix:
        service:
          - aliveness
          - breeze
          - hula
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Build
        run: ./pepsi build --locked --release ${{ matrix.service }}

  build_tools:
    name: Build
    strategy:
      matrix:
        tool:
          - annotato
          - camera_matrix_extractor
          - depp
          - fanta
          - pepsi
          - twix
          - widget_gallery
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Build
        run: ./pepsi build --locked --release ${{ matrix.tool }}

  build_mkdocs:
    name: Build mkdocs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Install mkdocs
        run: pip install mkdocs-material
      - name: Build docs
        run: mkdocs build --strict

  check_mujoco:
    name: Check Mujoco
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/astral-sh/uv:alpine
      options: --user=1000:1000
    defaults:
      run:
        working-directory: tools/machine-learning/mujoco
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check Mujoco
        run: |
          uv run ruff check

  format_mujoco:
    name: Format Mujoco
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/astral-sh/uv:alpine
      options: --user=1000:1000
    defaults:
      run:
        working-directory: tools/machine-learning/mujoco
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check Mujoco
        run: |
          uv run ruff format --check

  test_mujoco:
    name: Test Mujoco
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/astral-sh/uv:alpine
      options: --user=1000:1000
    defaults:
      run:
        working-directory: tools/machine-learning/mujoco
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check Mujoco
        run: |
          uv run pytest
