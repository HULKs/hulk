name: Rust
on:
  pull_request:
  merge_group:
    types: [checks_requested]
env:
  CARGO_HOME: /__w/hulk/cargo
  CARGO_TARGET_DIR: /__w/hulk/target
  CARGO_TERM_COLOR: always
  HULK_DATA_HOME: /__w/hulk/data
  NAOSDK_AUTOMATIC_YES: 1

jobs:
  check:
    name: Check
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check
        run: |
          ./pepsi clippy --workspace

  check-cargo-lock:
    name: Check Cargo.lock
    strategy:
      matrix:
        path:
          - .
          - services/aliveness
          - services/breeze
          - services/hula
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check
        run: |
          cd ${{ matrix.path }}
          cargo update --locked --workspace

  check-parameters:
    name: Check parameters
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check
        run: |
          cargo run --manifest-path=crates/parameter_tester/Cargo.toml

  format:
    name: Format
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check
        run: |
          cargo fmt --check

  format-toml:
    name: Format TOML files
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Check
        run: |
          taplo fmt --check --diff

  test:
    name: Test
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Test
        run: |
          cargo test --profile incremental --all-features --workspace

  build:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        target: [imagine, nao, replayer, webots]
        profile: [release, dev]
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Build
        run: |
          ./pepsi build --profile ${{ matrix.profile }} ${{ matrix.target }}

  build_services:
    name: Build
    strategy:
      matrix:
        path:
          [
            services/aliveness,
            services/breeze,
            services/hula,
          ]
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Build
        run: |
          ./pepsi sdk install
          . $(./pepsi sdk path)/environment-setup-corei7-64-aldebaran-linux
          cd ${{ matrix.path }}
          cargo build --release

  build_tools:
    name: Build
    strategy:
      matrix:
        path:
          [
            tools/annotato,
            tools/camera_matrix_extractor,
            tools/depp,
            tools/fanta,
            tools/pepsi,
            tools/twix,
          ]
    runs-on:
      - self-hosted
      - v3
    container:
      image: ghcr.io/hulks/hulk-ci:1.81.0
      options: --user=1000:1000
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Build
        run: |
          cd ${{ matrix.path }}
          cargo build --release

  build_mkdocs:
    name: Build mkdocs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Install mkdocs
        run: pip install mkdocs-material
      - name: Build docs
        run: mkdocs build --strict
