from _typeshed import Incomplete
from absl.testing import parameterized
from mujoco import rollout as rollout

TEST_XML: str
TEST_XML_NO_SENSORS: str
TEST_XML_NO_ACTUATORS: str
TEST_XML_MOCAP: str
TEST_XML_EMPTY: str
TEST_XML_DIVERGE: str
ALL_MODELS: Incomplete

class MuJoCoRolloutTest(parameterized.TestCase):
    def setUp(self) -> None: ...
    def test_single_step(self, model_name) -> None: ...
    def test_one_rollout(self, model_name) -> None: ...
    def test_multi_step(self, model_name) -> None: ...
    def test_infer_nroll_initial_state(self, model_name) -> None: ...
    def test_infer_nroll_control(self, model_name) -> None: ...
    def test_infer_nroll_warmstart(self, model_name) -> None: ...
    def test_infer_nroll_state(self, model_name) -> None: ...
    def test_infer_nroll_sensordata(self, model_name) -> None: ...
    def test_one_rollout_fixed_ctrl(self, model_name) -> None: ...
    def test_multi_rollout(self, model_name) -> None: ...
    def test_multi_model(self, model_name) -> None: ...
    def test_multi_rollout_fixed_ctrl_infer_from_output(self, model_name) -> None: ...
    def test_py_rollout_generalized_control(self, model_name) -> None: ...
    def test_detect_divergence(self) -> None: ...
    def test_threading(self) -> None: ...
    def test_threading_native(self) -> None: ...
    def test_threading_native_persistent_object(self) -> None: ...
    def test_threading_native_persistent_function(self) -> None: ...
    def test_warmstart(self) -> None: ...
    def test_mocap(self) -> None: ...
    def test_intercept_mj_errors(self) -> None: ...
    def test_invalid(self) -> None: ...
    def test_bad_sizes(self) -> None: ...
    def test_stateless(self) -> None: ...

def get_state(model, data): ...
def step(model, data, state, control, control_spec=...): ...
def one_rollout(model, data, initial_state, control, control_spec=...): ...
def ensure_2d(arg): ...
def ensure_3d(arg): ...
def py_rollout(model, data, initial_state, control, control_spec=...): ...
